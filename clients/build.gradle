apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")
    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.7'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}


springBoot {
    mainClassName = "nl.tno.federated.webserver.ServerKt"
}

/* The Client is the communication channel between the external and the node. This task will help you immediately
 * execute your rpc methods in the main method of the client.kt. You can somewhat see this as a quick test of making
 * RPC calls to your nodes.
 */
task runTemplateClient(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'nl.tno.federated.ClientKt'
    args 'federated.sensorlab.tno.nl:10006', 'user1', 'vzzuABeCut3jGoJfEp94'
}

/* This task will start the springboot server that connects to your node (via RPC connection). All of the http requests
 * are in the Controller file. You can leave the Server.kt and NodeRPCConnection.kt file untouched for your use.
 */
task runTemplateServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'nl.tno.federated.webserver.ServerKt'
    args '--server.port=10050', '--config.rpc.host=localhost', '--config.rpc.port=10012', '--config.rpc.username=user1', '--config.rpc.password=vzzuABeCut3jGoJfEp94'
}