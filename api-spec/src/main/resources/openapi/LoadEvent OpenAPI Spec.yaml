openapi: 3.0.0
info:
    title: LoadEvent
    version: undefined
    description: 'This OAS Specification was generated by Semantic Treehouse''s FIT Wizard on 2023-05-02T16:40:42+02:00. It is meant as a starting point for developers. No rights can be derived from this document.'

paths:
    /LoadEvent:
        post:
            summary: 'Create a resource of type LoadEvent.'
            description: 'Create a resource of type LoadEvent.'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoadEvent'
                required: true
            responses:
                '200':
                    description: 'Successfully created the resource.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoadEvent'
                '400':
                    description: 'Bad Request'
                '401':
                    description: 'Unauthorised'
                '415':
                    description: 'Unsupported Media Type'
    '/LoadEvent/{resourceId}':
        get:
            summary: 'Retrieve a resource of type LoadEvent by id.'
            description: 'Retrieve a resource of type LoadEvent by id.'
            parameters:
                -   name: resourceId
                    in: path
                    required: true
                    schema:
                        type: string
                    style: simple
            responses:
                '200':
                    description: 'Successful operation.'
                    content:
                        application/json:
                            schema:
                                type: string
                '400':
                    description: 'Bad Request'
                '401':
                    description: 'Unauthorised'
                '404':
                    description: 'Resource not found'
                '415':
                    description: 'Unsupported Media Type'

components:
    schemas:
        LoadEvent:
            title: 'Load Event version 1'
            description: 'Generated by TNO FEDeRATED'
            required:
                - involvesDigitalTwin1
                - involvesDigitalTwin2
                - involvesActor
            additionalProperties: false
            properties:
                involvesActor:
                    items:
                        $ref: '#/components/schemas/Actor'
                    type: array # multiple actors in 1 event
                involvesDigitalTwin1:
                    items:
                        oneOf:
                            -   $ref: '#/components/schemas/TransportMeans' # still need to discuss how conveyance number can be accommodated
                            -   $ref: '#/components/schemas/Cargo'
                involvesDigitalTwin2:
                    items:
                        oneOf:
                            -   $ref: '#/components/schemas/Cargo'
                            -   $ref: '#/components/schemas/TransportEquipment'
            type: object

        Actor:
            title: 'Actor in the business transaction '
            description: 'Actor has a role and is described by a legal person - relevant for us: consignor, consignee, carrier'
            required:
                - actorLegalPerson
                - actorLogisticsRole
            additionalProperties: false
            properties:
                actorLegalPerson:
                    items:
                        required: [ legalPersonAddress, legalPersonName, legalPersonID ]
                        additionalProperties: false
                        properties: { legalPersonAddress: { items: { required: [ postalCode, locatedAtStreetName, postalAddress, locatedInCountry, locatedInCity ], additionalProperties: false, properties: { postalCode: { items: { type: string }, minItems: 1, type: array }, locatedAtStreetName: { items: { type: string }, minItems: 1, type: array }, postalAddress: { items: { type: string }, minItems: 1, type: array }, locatedInCountry: { items: { required: [ countryISOCode ], additionalProperties: false, properties: { countryISOCode: { items: { type: object }, minItems: 1, type: array } }, type: object }, minItems: 1, type: array }, locatedInCity: { items: { required: [ cityName ], additionalProperties: false, properties: { cityName: { items: { type: string }, minItems: 1, type: array } }, type: object }, minItems: 1, type: array } }, type: object }, minItems: 1, type: array }, legalPersonName: { items: { type: string }, minItems: 1, type: array }, legalPersonID: { items: { type: string }, minItems: 1, type: array } }
                        type: object
                    minItems: 1
                    type: array
                actorLogisticsRole:
                    items:
                        type: string
                        enum: [ Consignee, Consignor, Carrier ]
                    minItems: 1
                    type: array
            type: object

        DigitalTwin:
            title: "A digital twin"
            description: "May represent a transport means, a transport equipment or cargo (goods / dangerous goods)"
            required:
                - digital_twin_type
            properties:
                digital_twin_type:
                    type: string
                    enum: [ TransportMeans, TransportEquipment, Cargo ]
                digitalTwinID:
                    type: string
            discriminator:
                propertyName: digital_twin_type

        TransportMeans:
            title: 'Transport means'
            description: 'Specialized digital twin, mostly truck'
            allOf:
                -   $ref: '#/components/schemas/DigitalTwin'
                -   type: object
            additionalProperties: false
            required:
                - transportMeansMode
                - digitalTwinID
                - transportMeansNationality
            properties:
                transportMeansMode:
                    type: string
                    enum: [ Sea, Rail, Road, Air, Mail, Multimodal, Pipelines, InlandWaterways ]
                hasTransportmeansNationality:
                    type: string
                    enum: [ AD, AE, AF, AG, AI, AL, AM, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CVCW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, XZ, YE, YT, ZA, ZM, ZW ]

        TransportEquipment: # seal quantity not yet fully defined
            title: 'Transport equipment'
            description: 'Equipment to be used for transport of goods'
            allOf:
                -   $ref: '#/components/schemas/Cargo'
                -   type: object
            additionalProperties: false
            required:
                - digitalTwinID
                - transportEquipmentSizeType
                - size
            properties:
                transportEquipmentSizeType:
                    type: string
                    enum: [ AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AL, AM, AN, AO, AP, AQ, AR, AS, AT, AU, AV, AX, AY, AZ, BA, BB, BC, BD, BE, BF, BG, BH, BI, BJ, BK, BL, BM, BN, BO, BP, BR ]
                size:
                    type: string

        Cargo:
            title: 'Cargo digital twin'
            description: 'Specialized digital twin, can be goods, dangerous goods or transport equipment'
            type: object
            required:
                - dangerous
                - grossMass
                - grossVolume
            properties:
                dangerous:
                    type: boolean
                grossMass:
                    type: string
                grossVolume:
                    type: string
            discriminator:
                propertyName: dangerous

        Goods:
            title: 'Goods'
            description: 'Specialized cargo, goods'
            allOf:
                -   $ref: '#/components/schemas/Cargo'
                -   type: object
            required:
                - goodsTypeCode
                - netMass
                - numberOfUnits
                - goodsDescription
            properties:
                goodsTypeCode:
                    type: string
                netMass:
                    type: integer
                numberOfUnits:
                    type: integer
                goodsDescription:
                    type: string

        DangerousGoods:
            title: 'Dangerous goods'
            description: 'Specialized cargo, dangerous goods'
            allOf:
                -   $ref: '#/components/schemas/Cargo'
                -   type: object
            required:
                - UNDGCode
                - dangerousGoodsRegulationCode
                - dangerousGoodsTechnicalName
                - dangerousGoodsEMSID
                - dangerousGoodsPackagingDangerLevelCode
                - dangerousGoodsHazardClassificationID
                - dangerousGoodsProperShippingName
                - dangerousGoodsSupplementaryInformation
                - dangerousGoodsFlashpointTemperature
            properties:
                UNDGCode:
                    type: string
                dangerousGoodsRegulationCode:
                    type: string
                dangerousGoodsTechnicalName:
                    type: string
                dangerousGoodsEMSID:
                    type: string
                dangerousGoodsPackagingDangerLevelCode:
                    type: string
                dangerousGoodsHazardClassificationID:
                    type: string
                dangerousGoodsProperShippingName:
                    type: string
                dangerousGoodsSupplementaryInformation:
                    type: string
                dangerousGoodsFlashpointTemperature:
                    type: string